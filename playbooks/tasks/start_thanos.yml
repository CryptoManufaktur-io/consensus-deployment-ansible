---
- name: Creates thanos data dir
  file:
    path: "{{thanos_data_dir}}"
    state: directory

- name: Creates thanos conf dir
  file:
    path: "{{thanos_conf_dir}}"
    state: directory

- name: Copy thanos conf to remote
  copy:
    src: "{{ local_thanos_conf_dir }}/"
    dest: "{{ thanos_conf_dir }}"

- name: Replace variable in conf file
  replace:
    path: "{{ thanos_conf_dir }}/bucket.yml"
    regexp: "{{item.0}}"
    replace: "{{item.1}}"
  loop:
    - ["##BUCKET_NAME##", "{{loki_bucket}}"]
    - ["##BUCKET_ENDPOINT##", "{{loki_bucket_endpoint}}"]
    - ["##BUCKET_ACCESS_KEY##", "{{loki_bucket_access_key}}"]
    - ["##BUCKET_ACCESS_SECRET##", "{{loki_bucket_secret_key}}"]

- name: Modify permissions to match user-group inside docker image
  shell: chown -R "{{ ansible_user }}" "{{ thanos_data_dir }}" && chown -R "{{ ansible_user }}" "{{ thanos_conf_dir }}"
  become: true

- name: Create docker monitoring network
  docker_network:
    name: "{{ docker_monitoring_network }}"

- name: Start thanos store container
  docker_container:
    name: "{{ thanos_store_container_name }}"
    state: started
    image: "{{ thanos_image_name }}"
    pull: true
    restart_policy: unless-stopped
    memory_swappiness: 0
    network_mode: "{{ docker_monitoring_network }}"
    restart: "{{ restart_container_if_exists | default(false) }}"
    log_options: "{{ common_log_options }}"
    log_driver: "{{ common_log_driver }}"
    volumes: "{{thanos_volumes}}"
    memory: "{{thanos_memory}}"
    memory_swap: "{{thanos_memory}}"
    command: "{{ thanos_store_start_args }}"
    env: "{{ thanos_env | default({}) }}"
    user: "{{ thanos_user_id }}"

- name: Start thanos sidecar container
  docker_container:
    name: "{{ thanos_sidecar_container_name }}"
    state: started
    image: "{{ thanos_image_name }}"
    pull: true
    restart_policy: unless-stopped
    memory_swappiness: 0
    network_mode: "{{ docker_monitoring_network }}"
    restart: "{{ restart_container_if_exists | default(false) }}"
    log_options: "{{ common_log_options }}"
    log_driver: "{{ common_log_driver }}"
    volumes: "{{thanos_volumes}}"
    memory: "{{thanos_memory}}"
    memory_swap: "{{thanos_memory}}"
    command: "{{ thanos_sidecar_start_args }}"
    env: "{{ thanos_env | default({}) }}"
    user: "{{ thanos_user_id }}"

- name: Start thanos compact container
  docker_container:
    name: "{{ thanos_compact_container_name }}"
    state: started
    image: "{{ thanos_image_name }}"
    pull: true
    restart_policy: unless-stopped
    memory_swappiness: 0
    network_mode: "{{ docker_monitoring_network }}"
    restart: "{{ restart_container_if_exists | default(false) }}"
    log_options: "{{ common_log_options }}"
    log_driver: "{{ common_log_driver }}"
    volumes: "{{thanos_volumes}}"
    memory: "{{thanos_memory}}"
    memory_swap: "{{thanos_memory}}"
    command: "{{ thanos_compact_start_args }}"
    env: "{{ thanos_env | default({}) }}"
    user: "{{ thanos_user_id }}"

- name: Start thanos receive container 10903
  docker_container:
    name: "{{ thanos_receive_container_name }}"
    state: started
    image: "{{ thanos_image_name }}"
    pull: true
    ports:
      - "{{public_ip_address}}:10903:10903"
    restart_policy: unless-stopped
    memory_swappiness: 0
    network_mode: "{{ docker_monitoring_network }}"
    restart: "{{ restart_container_if_exists | default(false) }}"
    log_options: "{{ common_log_options }}"
    log_driver: "{{ common_log_driver }}"
    volumes: "{{thanos_volumes}}"
    memory: "{{thanos_memory}}"
    memory_swap: "{{thanos_memory}}"
    command: "{{ thanos_receive_start_args }}"
    env: "{{ thanos_env | default({}) }}"
    user: "{{ thanos_user_id }}"

- name: Start thanos query container
  docker_container:
    name: "{{ thanos_query_container_name }}"
    state: started
    image: "{{ thanos_image_name }}"
    pull: true
    restart_policy: unless-stopped
    memory_swappiness: 0
    network_mode: "{{ docker_monitoring_network }}"
    restart: "{{ restart_container_if_exists | default(false) }}"
    log_options: "{{ common_log_options }}"
    log_driver: "{{ common_log_driver }}"
    volumes: "{{thanos_volumes}}"
    memory: "{{thanos_memory}}"
    memory_swap: "{{thanos_memory}}"
    command: "{{ thanos_query_start_args }}"
    env: "{{ thanos_env | default({}) }}"
    user: "{{ thanos_user_id }}"

- name: Register thanos metrics to prometheus
  copy:
    dest: "{{ prometheus_file_sd_dir }}/thanos.yml"
    content: |
      - labels:
          appname: {{ thanos_query_container_name }}
        targets:
        - {{ thanos_query_container_name }}:10902

      - labels:
          appname: {{ thanos_receive_container_name }}
        targets:
        - {{ thanos_receive_container_name }}:10902

      - labels:
          appname: {{ thanos_compact_container_name }}
        targets:
        - {{ thanos_compact_container_name }}:10902

      - labels:
          appname: {{ thanos_sidecar_container_name }}
        targets:
        - {{ thanos_sidecar_container_name }}:10902

      - labels:
          appname: {{ thanos_store_container_name }}
        targets:
        - {{ thanos_store_container_name }}:10902

