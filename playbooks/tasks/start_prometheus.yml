- name: Start prometheus
  hosts: "{{ variable_host }}"
  gather_facts: false
  tasks:
    - name: Creates prometheus data dir
      file:
        path: "{{ prometheus_data_dir }}"
        state: directory

    - name: Creates prometheus conf dir
      file:
        path: "{{ prometheus_config_dir }}"
        state: directory

    - name: Copy prometheus conf to remote
      copy:
        src: "{{ local_prometheus_conf_dir }}/"
        dest: "{{ prometheus_config_dir }}"

    - name: Modify permissions to match user-group inside docker image
      shell: chown -R "{{ ansible_user }}" "{{ prometheus_data_dir }}" && chown -R "{{ ansible_user }}" "{{ prometheus_config_dir }}"
      become: true

    - name: Replace variable in conf file
      replace:
        path: "{{ prometheus_config_dir }}/config.yml"
        regexp: '##inventory_hostname##'
        replace: '{{ inventory_hostname }}'

    - name: Add remote write if remote_write_url is present
      blockinfile:
        path: "{{ prometheus_config_dir }}/config.yml"
        block: |
          remote_write:
            - url: "{{ remote_write_url }}"
      when: remote_write_url | default('') != ''

    - name: Create docker monitoring network
      docker_network:
        name: "{{ docker_monitoring_network }}"

    - name: Start prometheus container
      docker_container:
        name: "{{ prometheus_container_name }}"
        state: started
        image: "{{ prometheus_image_name }}"
        pull: true
        ports:
          - "9090:9090"
        restart_policy: unless-stopped
        memory_swappiness: 0
        kernel_memory: "{{prometheus_kernel_memory}}"
        network_mode: "{{ docker_monitoring_network }}"
        restart: "{{ prometheus_require_restart | default(false) }}"
        log_options: "{{ common_log_options }}"
        log_driver: "{{ common_log_driver }}"
        volumes: "{{prometheus_volumes}}"
        memory: "{{prometheus_memory}}"
        memory_swap: "{{prometheus_memory}}"
        command: "{{ prometheus_rw_start_args if (enable_remote_receiver | default('false')) == 'true' else prometheus_start_args }}"
        env: "{{ prometheus_env | default({}) }}"
        user: "{{ prometheus_user_id }}"
