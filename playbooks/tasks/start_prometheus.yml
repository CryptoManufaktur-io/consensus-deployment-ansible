- name: Start prometheus
  hosts: "{{ variable_host }}"
  gather_facts: true
  serial: 20
  tasks:
    - name: Creates prometheus data dir
      file:
        path: "{{ prometheus_data_dir }}"
        state: directory

    - name: Creates prometheus targets dir
      file:
        path: "{{ prometheus_config_dir }}"
        state: directory

    - name: Creates prometheus file_sd dir
      file:
        path: "{{ prometheus_file_sd_dir }}"
        state: directory

    - name: Modify permissions to match user-group inside docker image
      shell: chown -R "{{ ansible_user }}" "{{ prometheus_data_dir }}"
      shell: chown -R "{{ ansible_user }}" "{{ prometheus_config_dir }}"
      become: true

    - name: Create prometheus configuration file with remote write
      copy:
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        content: |
          global:
            scrape_interval: {{ prometheus_scrape_intervals }}

          scrape_configs:
            - job_name: "{{ inventory_hostname }}"
              scrape_interval: {{ prometheus_scrape_intervals }}
              static_configs:
                - targets: ['localhost:9090']
              file_sd_configs:
              - files:
                - "/etc/prometheus/file_sd/*.yml"

          remote_write:
            - url: "http://{{ hostvars[hostvars[inventory_hostname].rw_host]['public_ip_address'] }}:9090/api/v1/write"
      when: enable_remote_write | default('false') == 'true'

    - name: Create prometheus configuration file without remote write
      copy:
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        content: |
          global:
            scrape_interval: {{ prometheus_scrape_intervals }}

          scrape_configs:
            - job_name: "{{ inventory_hostname }}"
              scrape_interval: {{ prometheus_scrape_intervals }}
              static_configs:
                - targets: ['localhost:9090']
              file_sd_configs:
              - files:
                - "/etc/prometheus/file_sd/*.yml"
      when: enable_remote_write | default('false') == 'false'

    - name: Start prometheus container
      docker_container:
        name: "{{ prometheus_container_name }}"
        state: started
        image: "{{ prometheus_image_name }}"
        pull: true
        restart_policy: unless-stopped
        memory_swappiness: 0
        kernel_memory: "{{prometheus_kernel_memory}}"
        network_mode: host
        restart: "{{ prometheus_require_restart | default(false) }}"
        log_options: "{{ common_log_options }}"
        log_driver: "{{ common_log_driver }}"
        volumes: "{{prometheus_volumes}}"
        memory: "{{prometheus_memory}}"
        memory_swap: "{{prometheus_memory}}"
        command: "{{ prometheus_rreceiver_start_args if (enable_remote_receiver | default('false')) == 'true' else prometheus_start_args }}"
        env: "{{ prometheus_env | default({}) }}"
        user: "{{ prometheus_user_id }}"
