- name: Start grafana
  hosts: "{{ variable_host }}"
  gather_facts: false
  tasks:
    - name: Creates grafana dir
      file:
        path: "{{grafana_dir}}"
        state: directory

    - name: Archive local_grafana_data_dir dir to prepare for upload
      archive:
        path: "{{local_grafana_data_dir}}/*"
        dest: "{{local_grafana_data_archive}}"
      delegate_to: localhost

    - name: Upload grafana data to remote
      unarchive:
        src: "{{ local_grafana_data_archive }}"
        dest: "{{ grafana_dir }}"

    - name: Remove {{local_grafana_data_archive}} archive after upload
      file:
        path: "{{ local_grafana_data_archive }}"
        state: absent
      delegate_to: localhost

    - name: Modify permissions to match user-group inside docker image
      shell: chown -R "{{ ansible_user }}" "{{ grafana_dir }}"
      become: true

    - name: Start grafana container
      docker_container:
        name: "{{ grafana_container_name }}"
        state: started
        image: "{{ grafana_image_name }}"
        pull: true
        restart_policy: unless-stopped
        memory_swappiness: 0
        kernel_memory: "{{grafana_kernel_memory}}"
        network_mode: host
        restart: "{{ grafana_require_restart | default(false) }}"
        log_options: "{{ json_log_options }}"
        log_driver: "{{ json_log_driver }}"
        volumes: "{{grafana_volumes}}"
        memory: "{{grafana_memory}}"
        memory_swap: "{{grafana_memory}}"
        command: "{{ grafana_start_args }}"
        env: "{{ grafana_env | default({}) }}"
        user: "{{ grafana_user_id }}"

    - name: Register grafana metrics to prometheus
      copy:
        dest: "{{ prometheus_file_sd_dir }}/grafana.yml"
        content: |
          - labels:
              instance: grafana
            targets:
            - localhost:3000
