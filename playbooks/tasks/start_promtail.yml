---
- name: Setup promtail and run
  shell: |
    mkdir -p {{ promtail_config_dir }}
    chown -R {{ ansible_user }} {{ promtail_config_dir }}

    # Create config file
    cat > {{ promtail_config_dir }}/config.yml << EOF
    server:
      http_listen_port: 9080
      grpc_listen_port: 0
      log_level: warn

    positions:
      filename: /mnt/config/positions.yml

    clients:
      - url: {{promtail_loki_url}}

    scrape_configs:
    - job_name: containers
      static_configs:
      - targets:
          - localhost
        labels:
          host_node: {{inventory_hostname}}
          __path__: /var/lib/docker/containers/*/*log

      pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:

      - json:
          expressions:
            tag:
          source: attrs

      - regex:
          expression: (?P<image_name>(?:[^|]*[^|])).(?P<container_name>(?:[^|]*[^|])).(?P<image_id>(?:[^|]*[^|])).(?P<container_id>(?:[^|]*[^|])).(?P<testnet>(?:[^|]*[^|]))
          source: tag

      - timestamp:
          format: RFC3339Nano
          source: time

      - labels:
          stream:
          container_name:
          testnet:

      - labeldrop:
        - filename

      - output:
          source: output

    EOF

    # Enable receiver when set to receive
    if [ '{{ push_receiver }}' = 'true' ]; then
    cat >> {{ promtail_config_dir }}/config.yml << EOF
    - job_name: {{ inventory_hostname }}_push
      loki_push_api:
        server:
          http_listen_port: 3500
          grpc_listen_port: 3600
        labels:
          pushserver: {{ inventory_hostname }}_push

    EOF
    fi

    # Run promtail
    if [ '{{ push_receiver }}' = 'true' ]; then
    docker rm -f {{ promtail_container_name }} || true && docker run -d --log-driver {{common_log_driver}} --log-opt tag="{{'{{'}}.ImageName{{'}}'}}|{{'{{'}}.Name{{'}}'}}|{{'{{'}}.ImageFullID{{'}}'}}|{{'{{'}}.FullID{{'}}'}}|default" --name {{ promtail_container_name }} -u {{ promtail_user_id }} -v /var/lib/docker/containers:/var/lib/docker/containers:ro -v {{promtail_config_dir}}:/mnt/config -v /etc/machine-id:/etc/machine-id:ro -v /var/log:/var/log:ro -p {{public_ip_address}}:3500:3500 --restart unless-stopped --network {{ docker_monitoring_network }} {{ promtail_image_name }} {{ promtail_start_args }}
    else
    docker rm -f {{ promtail_container_name }} || true && docker run -d --log-driver {{common_log_driver}} --log-opt tag="{{'{{'}}.ImageName{{'}}'}}|{{'{{'}}.Name{{'}}'}}|{{'{{'}}.ImageFullID{{'}}'}}|{{'{{'}}.FullID{{'}}'}}|default" --name {{ promtail_container_name }} -u {{ promtail_user_id }} -v /var/lib/docker/containers:/var/lib/docker/containers:ro -v {{promtail_config_dir}}:/mnt/config -v /etc/machine-id:/etc/machine-id:ro -v /var/log:/var/log:ro --restart unless-stopped --network {{ docker_monitoring_network }} {{ promtail_image_name }} {{ promtail_start_args }}
    fi

    # Register promtail metrics to prometheus
    cat > {{ prometheus_file_sd_dir }}/promtail.yml << EOF
    - labels:
        appname: {{ promtail_container_name }}
      targets:
      - {{ promtail_container_name }}:9080

    EOF
