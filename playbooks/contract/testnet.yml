---
- hosts: localhost
  gather_facts: false
  vars:
    - VALIDATORS: ["lighthouse0", "lighthouse1", "teku0", "nimbus0", "prysm0"]
    - VALIDATORS_PER_INSTANCE: 100

    - CONFIG_NAME: george-testnet
    - GENESIS_DELAY: 86400
    - MIN_GENESIS_TIME: 1645192800
    - NETWORK: goerli
    - DEPOSIT_CHAIN_ID: 5
    - DEPOSIT_NETWORK_ID: 5
    - data_dir: "{{playbook_dir}}/testnet"

    - ETH1_FROM_ADDR: "0xA9CE3c09515F397752fca4F72cf4197E4572BB29"
    - ETH1_FROM_PRIV: "79e831ea572115d72c85700e32ff27b2d2ea5240158f3060232f18ab55aeb630"
    - TX_HASH: "0xd3ca6ad5d4da89658823128f93155f27a2897475c319f8cb32464643fa9396a8"
    
  tasks:
    - name: Ask Wallet address
      pause:
        prompt: "Use private/public key on file (yes/no)?"
      register: prompt_wallet_address

    - name: Prompt for wallet details
      when: prompt_wallet_address.user_input | bool == false
      block:
        - name: Public key
          pause:
            prompt: What is your public key?
          register: publickey_temp

        - name: Private key
          pause:
            prompt: What is your private key?
          register: privatekey_temp

        - name: Set transaction hash variable
          set_fact:
            ETH1_FROM_ADDR: "{{publickey_temp.user_input}}"
            ETH1_FROM_PRIV: "{{privatekey_temp.user_input}}"

    - name: Ask Transaction hash
      pause:
        prompt: "Use transaction hash on file (yes/no/new)?"
      register: prompt_transaction_hash

    - name: Prompt for transaction hash
      when: prompt_transaction_hash.user_input == 'no'
      block:
        - name: Transaction hash
          pause:
            prompt: What the contract transaction hash?
          register: thash_temp
      
        - name: Set transaction hash variable
          set_fact:
            TX_HASH: "{{thash_temp.user_input}}"

    - name: Create contract and get transaction hash
      when: prompt_transaction_hash.user_input == 'new'
      block:
        - name: Create contract
          shell: "docker run --network host --rm -v {{playbook_dir}}/combined.json:/data/combined.json --entrypoint ethereal ethstaker/eth-val-tools contract deploy --network={{NETWORK}} --name=DepositContract --json=/data/combined.json --from={{ETH1_FROM_ADDR}} --privatekey={{ETH1_FROM_PRIV}}"
          register: contract_output

        - name: Set transaction hash variable
          set_fact:
            TX_HASH: "{{contract_output.stdout}}"
          when: contract_output.rc == 0
          failed_when: contract_output.rc >= 1

    - name: Get details from transaction hash
      command: "python3 {{playbook_dir}}/transaction.py https://{{NETWORK}}.etherscan.io {{TX_HASH}}"
      register: transaction_hash_details
      until: transaction_hash_details is succeeded
      retries: 10
      delay: 30

    - name: Parse json
      set_fact:
        transaction_hash_details: "{{ transaction_hash_details.stdout | from_json }}"

    - name: Convert epoch to date full
      shell: "date -d @{{MIN_GENESIS_TIME}}"
      register: DATE_FULL

    - name: Creates testnet data dir
      file:
        path: "{{data_dir}}"
        state: directory

    - name: Copy config file
      copy:
        src: "{{ playbook_dir }}/config.yaml"
        dest: "{{ data_dir }}"

    - name: Replace variable in conf file
      replace:
        path: "{{ data_dir }}/config.yaml"
        regexp: "{{item.0}}"
        replace: "{{item.1}}"
      loop:
        - ["##CONFIG_NAME##", "{{CONFIG_NAME}}"]
        - ["##MIN_GENESIS_ACTIVE_VALIDATOR_COUNT##", "{{VALIDATORS|length * VALIDATORS_PER_INSTANCE}}"]
        - ["##DATE_FULL##", "{{DATE_FULL.stdout}}"]
        - ["##MIN_GENESIS_TIME##", "{{MIN_GENESIS_TIME}}"]
        - ["##GENESIS_DELAY##", "{{GENESIS_DELAY}}"]
        - ["##NETWORK##", "{{NETWORK}}"]
        - ["##DEPOSIT_CHAIN_ID##", "{{DEPOSIT_CHAIN_ID}}"]
        - ["##DEPOSIT_NETWORK_ID##", "{{DEPOSIT_NETWORK_ID}}"]
        - ["##DEPOSIT_CONTRACT_ADDRESS##", "{{transaction_hash_details.contract_address}}"]

    - name: Create deploy_block.txt
      copy:
        dest: "{{ data_dir }}/deploy_block.txt"
        content: |
          {{transaction_hash_details.block_number}}

    - name: Create deposit_contract.txt
      copy:
        dest: "{{ data_dir }}/deposit_contract.txt"
        content: |
          {{transaction_hash_details.contract_address}}

    - name: Create empty mnemonics.yaml
      copy:
        dest: "{{ data_dir }}/mnemonics.yaml"
        content: ""

    - name: Generate mnenomic and add to file
      include_tasks: generate_mnemonics.yml
      loop: "{{VALIDATORS}}"

    - name: Generate genesis state
      shell: "docker run --network host --rm -v {{data_dir}}:/data gathecageorge/eth2-test-genesis:latest phase0 --config /data/config.yaml --eth1-block {{transaction_hash_details.block_hash}} --mnemonics /data/mnemonics.yaml --timestamp {{MIN_GENESIS_TIME - GENESIS_DELAY}} --tranches-dir /data/tranches --state-output /data/genesis.ssz"
