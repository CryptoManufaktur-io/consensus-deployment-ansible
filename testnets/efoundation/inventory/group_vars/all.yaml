##############################################
# generic ansible config information
##############################################
ansible_user: "ubuntu"
public_ip_address: "{{ansible_host}}"
ansible_python_interpreter: /usr/bin/python3
docker_monitoring_network: "monitoring_network"
restart_container_if_exists: true

##############################################
# eth1 endpoints
##############################################
enable_debug_public: true
el_bootnode_enode:

##############################################
# testnet specific information
##############################################
eth1_client: geth
fee_recipient: "0xf97e180c050e5Ab072211Ad2C213Eb5AEE4DF134"

##############################################
# ports to configure
##############################################
eth1_rpc_port: 8545
eth1_ws_rpc_port: 8546
eth1_auth_rpc_port: 8551
eth1_pprof_port: 8002
nimbus_rpc_port: 4009
beacon_api_port: 4000
beacon_grpc_port: 4001
beacon_metrics_port: 8000
beacon_p2p_port: 9000
validator_metrics_port: 8001
validator_rpc_port: 4002

##############################################
# name of the validator to display
##############################################
graffiti: "{{eth2_client_name}}-{{eth1_client}}"

##############################################
# local data directories
##############################################
secrets_file: "{{inventory_dir}}/group_vars/secrets.yml"
local_premerge_custom_config_data_host_dir: "{{inventory_dir}}/../premerge_custom_conf_data"
local_postmerge_custom_config_data_host_dir: "{{inventory_dir}}/../postmerge_custom_conf_data"
local_custom_config_data_host_dir: "{{inventory_dir}}/../custom_config_data"
custom_config_data_host_archive_filename: "{{runningTest}}_custom_config_data.tar.gz"
local_custom_config_data_host_archive: "{{inventory_dir}}/../{{custom_config_data_host_archive_filename}}"

enr_groups_all_path: "{{local_custom_config_data_host_dir}}/{{runningTest}}_enr"
enr_groups_file: "{{enr_groups_all_path}}/enr_groups.yml"
enr_all_file: "{{enr_groups_all_path}}/enr_all.yml"

##############################################
# remote host data directories
##############################################
home_dir: "/home/{{ ansible_user }}"
volume_mount_dir: "/mnt/Geth/ubuntu"
beacon_node_dir: "{{home_dir}}/beacon"
eth1_node_dir: "{{volume_mount_dir}}/eth1data"
eth1_beacondata_dir: "{{volume_mount_dir}}/beacondata"
jwtsecret_file_outside: "{{home_dir}}/jwtsecret"
validator_node_dir: "{{home_dir}}/validator"
testnet_dir: "{{home_dir}}/custom_config_data"

##############################################
# common log config
##############################################
common_log_options:
  max-file: "3"
  max-size: "30m"
  mode: "non-blocking"
  max-buffer-size: "4m"
  tag: "{{'{{'}}.ImageName{{'}}'}}|{{'{{'}}.Name{{'}}'}}|{{'{{'}}.ImageFullID{{'}}'}}|{{'{{'}}.FullID{{'}}'}}|{{'{{'}}if (index .ContainerLabels \"testnet\"){{'}}'}}{{'{{'}}index .ContainerLabels \"testnet\"{{'}}'}}{{'{{'}}else{{'}}'}}default{{'{{'}}end{{'}}'}}"
common_log_driver: json-file
beacon_log_level: info
testnet_labels: >
  {
    "testnet" : "{{ TESTS[runningTest][0] }}"
  }

##############################################
# container names
##############################################
beacon_container_name: beacon
validator_container_name: validator
hi_peer_count: 1000
separate_validator_process_enabled: true

##############################################
# node_exporter settings
##############################################
node_exporter_container_name: node-exporter
node_exporter_image_name: prom/node-exporter:latest
node_exporter_user_id: "0:0"
node_exporter_start_args: >
  --path.procfs=/host/proc
  --path.rootfs=/rootfs
  --path.sysfs=/host/sys
  --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
node_exporter_volumes:
  - "/etc/machine-id:/etc/machine-id:ro"
  - "/proc:/host/proc:ro"
  - "/sys:/host/sys:ro"
  - "/:/rootfs:ro"
node_exporter_memory: 5000M

##############################################
# prometheus settings
##############################################
prometheus_container_name: prometheus
prometheus_image_name: prom/prometheus:latest
prometheus_user_id: "1000:1000"
prometheus_start_args: >
  --config.file=/etc/prometheus/config.yml 
  --log.level=warn 
  --storage.tsdb.path=/prometheus 
  --storage.tsdb.max-block-duration=2h 
  --storage.tsdb.min-block-duration=2h
prometheus_rw_start_args: "{{ prometheus_start_args }} --enable-feature=remote-write-receiver"
prometheus_data_dir: "{{home_dir}}/prometheus_data"
prometheus_config_dir: "{{home_dir}}/prometheus_config"
prometheus_file_sd_dir: "{{prometheus_config_dir}}/file_sd"
local_prometheus_conf_dir: "{{inventory_dir}}/../prometheus_conf"
prometheus_volumes:
  - "{{prometheus_data_dir}}:/prometheus"
  - "{{prometheus_config_dir}}:/etc/prometheus"
prometheus_memory: 5000M

##############################################
# thanos settings
##############################################
thanos_image_name: thanosio/thanos:v0.30.2
thanos_user_id: "1000:1000"
thanos_memory: 5000M
thanos_conf_dir: "{{home_dir}}/thanos_conf"
thanos_data_dir: "{{home_dir}}/thanos_data"
local_thanos_conf_dir: "{{inventory_dir}}/../thanos_conf"
thanos_volumes:
  - "{{thanos_conf_dir}}:/etc/thanos"
  - "{{thanos_data_dir}}:/data"

thanos_store_container_name: thanos-store
thanos_store_start_args: >
  store
  --debug.name=thanos-store
  --log.level=debug
  --grpc-address=0.0.0.0:10091
  --grpc-grace-period=1s
  --http-address=0.0.0.0:10902
  --http-grace-period=1s
  --data-dir=/data/store
  --objstore.config-file=/etc/thanos/bucket.yml

thanos_receive_container_name: thanos-receive
thanos_receive_start_args: >
  receive
  --debug.name=thanos-receive
  --log.level=debug
  --grpc-address=0.0.0.0:10091
  --grpc-grace-period=1s
  --http-address=0.0.0.0:10902
  --http-grace-period=1s
  --objstore.config-file=/etc/thanos/bucket.yml
  --tsdb.path=/data/receive
  --label='receive="true"'
  --remote-write.address=0.0.0.0:10903

thanos_sidecar_container_name: thanos-sidecar
thanos_sidecar_start_args: >
  sidecar
  --debug.name=thanos-sidecar
  --log.level=debug
  --grpc-address=0.0.0.0:10091
  --grpc-grace-period=1s
  --http-address=0.0.0.0:10902
  --http-grace-period=1s
  --objstore.config-file=/etc/thanos/bucket.yml
  --tsdb.path=/data/sidecar
  --prometheus.url=http://{{prometheus_container_name}}:9090

thanos_query_container_name: thanos-query
thanos_query_start_args: >
  query
  --debug.name=thanos-query
  --log.level=debug
  --grpc-address=0.0.0.0:10091
  --grpc-grace-period=1s
  --http-address=0.0.0.0:10902
  --http-grace-period=1s
  --store=thanos-store:10091
  --store=thanos-receive:10091
  --store=thanos-sidecar:10091

thanos_compact_container_name: thanos-compact
thanos_compact_start_args: >
  compact
  --debug.name=thanos-compact
  --log.level=debug
  --http-address=0.0.0.0:10902
  --http-grace-period=1s
  --data-dir=/data/compactor
  --objstore.config-file=/etc/thanos/bucket.yml
  --wait

##############################################
# grafana settings
##############################################
cloudflare_container_name: cloudflare
cloudflare_image_name: oznu/cloudflare-ddns:latest
cloudflare_start_args: ""
cloudflare_env: >
  {
    "API_KEY" : "{{cloudflare_dns_api_token}}",
    "ZONE" : "{{grafana_domain}}",
    "SUBDOMAIN" : "{{grafana_host}}",
    "PROXIED" : "true"
  }
cloudflare_volumes:
  - "/etc/localtime:/etc/localtime:ro"
cloudflare_memory: 5000M
cloudflare_user_id: "0:0"

traefik_container_name: traefik
traefik_image_name: traefik:latest
traefik_start_args: >
  --log.level=WARN
  --metrics.prometheus=true
  --providers.docker=true
  --providers.docker.network={{docker_monitoring_network}}
  --providers.docker.exposedbydefault=false
  --certificatesresolvers.letsencrypt.acme.dnschallenge=true
  --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
  --certificatesresolvers.letsencrypt.acme.email={{acme_email}}
  --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
  --entrypoints.web.address=:{{traefik_web_http_port}}
  --entrypoints.web.http.redirections.entrypoint.to=websecure
  --entrypoints.web.http.redirections.entrypoint.scheme=https
  --entrypoints.websecure.address=:{{traefik_web_port}}
traefik_env: >
  {
    "CLOUDFLARE_EMAIL" : "{{cloudflare_email}}",
    "CLOUDFLARE_DNS_API_TOKEN" : "{{cloudflare_dns_api_token}}"
  }
traefik_volumes:
  - "/var/run/docker.sock:/var/run/docker.sock:ro"
  - "{{home_dir}}/certs:/letsencrypt"
  - "/etc/localtime:/etc/localtime:ro"
traefik_memory: 5000M
traefik_user_id: "0:0"

grafana_container_name: grafana
grafana_image_name: grafana/grafana:latest
grafana_user_id: "1000:1000"
grafana_start_args: ""
local_grafana_conf_dir: "{{inventory_dir}}/../grafana_conf"
local_grafana_conf_archive: "{{inventory_dir}}/../grafana_conf.tar.gz"
grafana_data_dir: "{{home_dir}}/grafana_data"
grafana_conf_dir: "{{home_dir}}/grafana_conf"
grafana_volumes:
  - "{{grafana_data_dir}}:/var/lib/grafana"
  - "{{grafana_conf_dir}}:/etc/grafana/provisioning/"
  - "/etc/localtime:/etc/localtime:ro"
grafana_env: >
  {
    "GF_PATHS_CONFIG" : "/etc/grafana/provisioning/grafana.ini",
    "GF_SERVER_ROOT_URL" : "https://{{grafana_host}}.{{grafana_domain}}",
    "GF_SERVER_DOMAIN" : "{{grafana_host}}.{{grafana_domain}}",
    "GF_SERVER_HTTP_PORT" : "{{grafana_port}}",
    "CLIENT" : "{{grafana_client}}",
    "GF_SECURITY_ADMIN_USER" : "{{grafana_admin_username}}",
    "GF_SECURITY_ADMIN_PASSWORD" : "{{grafana_admin_password}}",
    "GF_USERS_ALLOW_SIGN_UP" : "false",
    "GF_INSTALL_PLUGINS" : "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel"
  }
grafana_labels: >
  {
    "traefik.enable" : "true",
    "traefik.docker.network" : "{{docker_monitoring_network}}",
    "traefik.http.routers.grafana.entrypoints" : "web,websecure",
    "traefik.http.routers.grafana.rule" : "Host(`{{ grafana_host }}.{{ grafana_domain }}`)",
    "traefik.http.routers.grafana.tls.certresolver" : "letsencrypt",
    "traefik.http.services.grafana.loadbalancer.server.port" : "{{grafana_port}}"
  }
grafana_memory: 5000M


##############################################
# promtail settings
##############################################
promtail_image_name: grafana/promtail:latest
promtail_container_name: promtail
promtail_user_id: "0:0"
promtail_config_dir: "{{ home_dir }}/promtail_conf"
local_promtail_conf_dir: "{{inventory_dir}}/../promtail_conf"
promtail_start_args: >
  -config.file=/mnt/config/config.yml
promtail_volumes:
  - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
  - "{{promtail_config_dir}}:/mnt/config"
  - "/etc/machine-id:/etc/machine-id:ro"
  - /var/log:/var/log:ro
promtail_memory: 5000M


##############################################
# loki settings
##############################################
loki_image_name: grafana/loki:latest
loki_container_name: loki
loki_user_id: "1000:1000"
loki_config_dir: "{{ home_dir }}/loki_conf"
loki_data_dir: "{{ home_dir }}/loki_data"
local_loki_conf_dir: "{{inventory_dir}}/../loki_conf"
loki_start_args: >
  -config.file=/mnt/config/config.yml
loki_volumes:
  - "{{loki_config_dir}}:/mnt/config"
  - "{{loki_data_dir}}:/loki"
loki_memory: 5000M


##############################################
# cadvisor settings
##############################################
cadvisor_image_name: gcr.io/cadvisor/cadvisor:v0.47.1
cadvisor_container_name: cadvisor
cadvisor_exporter_volumes:
  - "/etc/machine-id:/etc/machine-id:ro"
  - "/:/rootfs:ro"
  - "/var/run:/var/run:rw"
  - "/sys:/sys:ro"
  - "/var/lib/docker/:/var/lib/docker:ro"
cadvisor_exporter_memory: 5000M
cadvisor_exporter_user_id: "0:0"
